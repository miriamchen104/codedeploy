sudo: required

language: php
php:
- '7.1.9'

# services:
#   - docker

branches:
  only:
  - master

# travis runtime environment from here or settings. : https://docs.travis-ci.com/user/environment-variables/
env:
  global:
    - ZIP_FILE="php-web-$TRAVIS_BUILD_NUMBER-$TRAVIS_COMMIT.zip"

    # travis-ci secure doc : https://docs.travis-ci.com/user/encryption-keys/
    # before install travis , first install ruby & gem
    # $ gem install travis
    # $ travis encrypt SOMEVAR="secretvalue"

    # AWS_ACCESS_KEY_ID_DEV
    - secure: ""
    # AWS_SECRET_ACCESS_KEY_DEV
    - secure: ""
    # AWS_ACCESS_KEY_ID_STG
    #    - secure: ""
    # AWS_SECRET_ACCESS_KEY_STG
    #    - secure: ""
    # AWS_ACCESS_KEY_ID_PROD , value : AKI....QMQ
    - secure: "fh4c2PovJ5gbN7Zi9AWj3NlH7T0hbIxbR3hk/wgEsb1u9d8hat94woytd2v30wSVF8kERMaFhGSL2fpi8C/MXMZEuq/ODiqaIzVXc5WR3UTiEp1sSqIatt/c+os13Uv0MQagrJdajxUKpFfkXUJQ+H4tVyL7h7/fb/TUE5fnz+bTfXsQyGZKG1wYAqJq9+hvc0CRX2HyuDB9pmGXTqYVt56vvn6SR73aqlhP7nm/ssuxSCxBQ/ESbb9H/z1yZW6qoFV1LDwMMeNa2vofP6ajDsbKn46heSyCyH/f04eZe/Amo3iXMOSUiVF/A+DIXCLiQJYj6pBE1Ux8oIJchWeh57sExswSsDRnlKEQyaqFbUDUQORlNK00xPy5Q3G5asCyEEMiUUX9qCpcfvGqm/7gMnpt8qTq9f/ZGZGSxW5KS00Q9HCYJfp4iavcsVkfQAcMqA5n43GhKLVkC5DySFQh9IWSYZWBboHSkecfiXo+JHdrNHLlnZQvs1DYaxjQ0jr6yC0oF9Gmtg5dt1I/V5WbPAO9SUil8fNHdZz/1al6w3L3G7+rNqfxqpO3C3nR0g9shH1VMjXUeQ12i6StbptaCrs9wwXQ2RD/sB8/gP6kfDyh5nE4YS7OTDXyT3eTk5TaM2tEw/wW70mLNO+pv9WI/OCNUuSkN+01jEtALrcsD1Q="
    # AWS_SECRET_ACCESS_KEY_PROD
    - secure: "2tscLvHLg8rI/uVPqER4ttxoKAqejSm/dq6kc27d7o897eK4TbGQ5+hJeEHu4cw6MBVQxG07qO7MJ7WcDRHw//L75pPjP7O86fN2Tgy65A0HR1z/zBKKe/c7rE8itSD5Rwlt5P3hRa6QmgBE8hotPu6mfkiwoAKwwFSJZay+Yo6Kzslfjp+pYq5SOfkw40BHFKKfJlGo8IoRwzdl7qYz0vs32Pa3yCb9NGd+6MHEmF9ZDr6dmJXSQjd32c1laj2jz4Qoy2v2y1rXtb/pGWWYIujus9G1nhZcyBaeLrflCvKyMGpAH8xhUsTZSYgErd7FVwhWkFdNyS3MYvHatz4c4k0pyzU2sbVovqosBQXKAp5b7wmqcl3zucNN/2YU7hSfXh5W/TwAE3IfE3PmDxjbKwcd1CgqYbcvVzDF6vwSX//aSeFDpUweUV5PFyxF50cbrKK21sFALklGnT+N/66YYny0nffL7+LU7dfzg8GUaJt3YO8wr+p5X6nN3+wJctAh7Atgf0rtCFPYmszVHLbKcCRns5WNBX9bW9VJqfeTdTwWlE8DMqNVUzBAtkTM6bQyJTqT2Zu4SEBlebcE5I+ryVoNmi+jUsvJbP4oKgmE5nr9siA/DEZSZgYZJPShH2Fhu709tPlSBU0pD3V9fClRuYTR4QbAa+BUGty+WldtqbQ="

    # global variables
    - AWS_ACCESS_KEY_ID=''
    - AWS_SECRET_ACCESS_KEY=''
    - AWS_REGION='us-east-2'
    - S3_BUCKET=''
    - S3_FOLDER='folder1'
    - CODEDEPLOY_APP_NAME=''
    - CODEDEPLOY_GROUP=''


# notification - https://docs.travis-ci.com/user/notifications
# notifications:
#   email:
#     recipients:
#       - one@example.com
#       - other@example.com
#     on_success: never # default: change
#     on_failure: always # default: always
# integration to slack , setup on slack travis-ci app
notifications:
  email:
    on_failure: always
    on_success: never
  # slack:
    # secure: "nUYjAZGN+uymXquFddUgPkbD/06atgwjWBRINpn3Hgq54+iJ8mSKJ5jSUaKUV4TCaQkwwv8+8GhwGTYeTkPq6/UBGQWeIVgfhzN0iXfjjhaBu0VhWzzeLfDFbD6ok0XRYdXYVnu3G3il7iXNSbCMH8jwsnrNvZNNEDovNxMA1LmPJ5v6Gg/+kGrngxYW0lIl/0+81TEBaVKo1KeIaEirRzIlN15tTNC6t3o9zV1dXaAE2H6ZbJLYj+NpsPCPYgjUf1seMBRCrMbTKcUu9yf2jwxXqZigtdmTAW5EZGro1ESv/v2kCnMmL5bmuDRizRw7CCnAANJQdJ3jVzVGK289+S/AqdcjGMYQxFRq/iyi4T6BZIbrHOTnKWwGq18djrEFxEysL6AC1rEDg7MTw2uQpiUAFIJff3PnXLEjJbKB/DR9zn3oLij4bxJ4CdnYwxZZvQO1zhQj2GhTzOYZ/G+DW3auuQI2ufVYaAiJf9NLoYLa1XXOyChAJhV3LEnZO8x78IRxwAmQKm/K6sTBIzXZXdb/heKCibnAEYUv7ZsKf8JzIKcv0nLreARqjBoUH181O+zhcjIdJKXmloQ67lUbtOFZD6jPQ1K/W1JZoAWcjX24g1VaApYPbMJDs8hMfZNFO/s52J/UQ3zy9WWUQK6Vp1AZgqErXEqO2+3MLh/wOhI="

cache:
  directories:
  - $COMPOSER_CACHE_DIR
  - $HOME/.composer/cache




# build lifecycle - https://docs.travis-ci.com/user/customizing-the-build/
# (OPTIONAL) Install apt addons
# (OPTIONAL) Install cache components
# before_install
# install
# before_script
# script
# (OPTIONAL) before_cache (for cleaning up cache)
# after_success or after_failure
# (OPTIONAL) before_deploy
# (OPTIONAL) deploy
# (OPTIONAL) after_deploy
# after_script

# set -e : when error stop build.
before_install:
  - set -e
  - echo `date +"%Y-%m-%d %H:%M:%S"`
  - echo $TRAVIS_BRANCH
  - if [[ $TRAVIS_BRANCH == "dev" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_DEV;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_DEV;
      S3_BUCKET='';
      CODEDEPLOY_APP='';
      CODEDEPLOY_GROUP='';
    fi
  - if [[ $TRAVIS_BRANCH == "staging" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_STG;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_STG;
      S3_BUCKET='';
      CODEDEPLOY_APP='';
      CODEDEPLOY_GROUP='';
    fi
  - if [[ $TRAVIS_BRANCH == "master" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PROD;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PROD;
      S3_BUCKET='s3miriam1123';
      CODEDEPLOY_APP='demo';
      CODEDEPLOY_GROUP='ec2';
    fi


# put testing scripts here
script:
- echo 'script step...'

before_deploy:
- cd "$TRAVIS_BUILD_DIR";
  mkdir "$TRAVIS_BUILD_DIR/zip";
  zip -r "$TRAVIS_BUILD_DIR/zip/$ZIP_FILE" *


deploy:
- provider: S3
  access_key_id: &aws_access_key $AWS_ACCESS_KEY_ID
  secret_access_key: &aws_secret_key
    secure: $AWS_SECRET_ACCESS_KEY
  region: $AWS_REGION
  local_dir: $TRAVIS_BUILD_DIR/zip
  bucket: $S3_BUCKET
  upload-dir: $S3_FOLDER
  skip_cleanup: true
  on:
    all_branches: true

- provider: codedeploy
  access_key_id: *aws_access_key
  secret_access_key: *aws_secret_key
  region: $AWS_REGION
  bucket: $S3_BUCKET
  key: $S3_FOLDER/$ZIP_FILE
  bundle_type: zip
  application: $CODEDEPLOY_APP
  deployment_group: $CODEDEPLOY_GROUP
  wait-until-deployed: true
  on:
    all_branches: true
